name: Build
description: Build image for deployment

inputs:
  service-account:
    description: Service account
    required: true
  project-id:
    description: Project ID
    required: true
  image-name:
    description: Image name
    required: true
  mongo-uri:
    description: Mongo URI
    required: true
  client-url:
    description: Client url
    required: true
  access-token-private-key:
    description: Access token private key
    required: true
  access-token-public-key:
    description: Access token public key
    required: true
  access-token-expired-in:
    description: Access token expiration time
    required: true
  access-token-max-age:
    description: Max age for expiration token
    required: true
  refresh-token-private-key:
    description: Refresh token private key
    required: true
  refresh-token-public-key:
    description: Refresh token public key
    required: true
  refresh-token-expired-in:
    description: Refresh token expiration time
    required: true
  refresh-token-max-age:
    description: Max age for refresh token
    required: true
  email-from:
    description: Email sender
    required: true
  smtp-host:
    description: SMTP server host
    required: true
  smtp-user:
    description: SMTP server user
    required: true
  smtp-pass:
    description: SMTP server pass
    required: true
  smtp-port:
    description: SMTP server port
    required: true

runs:
  using: composite
  steps:
    - name: Create app.env
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_SERVER_PORT: 8000
        envkey_MONGODB_URI: ${{ inputs.mongo-uri }}
        envkey_CLIENT_URL: ${{ inputs.client-url }}
        envkey_ACCESS_TOKEN_PRIVATE_KEY: ${{ input.access-token-private-key }}
        envkey_ACCESS_TOKEN_PUBLIC_KEY: ${{ input.access-token-public-key }}
        envkey_ACCESS_TOKEN_EXPIRED_IN: ${{ input.access-token-expired-in }}
        envkey_ACCESS_TOKEN_MAX_AGE: ${{ input.access-token-max-age }}
        envkey_REFRESH_TOKEN_PRIVATE_KEY: ${{ input.refresh-token-private-key }}
        envkey_REFRESH_TOKEN_PUBLIC_KEY: ${{ input.refresh-token-public-key }}
        envkey_REFRESH_TOKEN_EXPIRED_IN: ${{ input.refresh-token-expired-in }}
        envkey_REFRESH_TOKEN_MAX_AGE: ${{ input.refresh-token-max-age }}
        envkey_EMAIL_FROM: ${{ input.email-from }}
        envkey_SMTP_HOST: ${{ input.smtp-host }}
        envkey_SMTP_USER: ${{ input.smtp-user }}
        envkey_SMTP_PASS: ${{ input.smtp-pass }}
        envkey_SMTP_PORT: ${{ input.smtp-port }}
        directory: .
        file_name: app.env
        fail_on_empty: false

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.service-account }}
        project_id: ${{ inputs.project-id }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Build Docker Image
      shell: bash
      run: docker build -t ${{ inputs.image-name }}:latest .

    - name: Configure Docker Client
      shell: bash
      run: |-
        gcloud auth configure-docker europe-west2-docker.pkg.dev --quiet

    - name: Push Docker Image to Artifact Registry
      shell: bash
      run: |-
        docker tag ${{ inputs.image-name }}:latest europe-west2-docker.pkg.dev/${{ inputs.project-id }}/server/${{ inputs.image-name }}:latest
        docker push europe-west2-docker.pkg.dev/${{ inputs.project-id }}/server/${{ inputs.image-name }}:latest 

